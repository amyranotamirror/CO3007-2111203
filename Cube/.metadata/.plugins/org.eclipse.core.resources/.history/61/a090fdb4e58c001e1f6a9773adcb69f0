/*
 * timer.c
 *
 *  Created on: 26 thg 11, 2023
 *      Author: Amyra Nguyen
 */


#include "timer.h"

/* Public function  */
void init_timer(){
	// Set counter limit to raise a flag
	timerArray[LED_500].limit = BUTTON_DURATION_MIN / INTERRUPT_DURATION_MS;
	timerArray[LED_1000].limit = LED_INDICATOR_DURATION_MS / INTERRUPT_DURATION_MS;
	timerArray[LED_1500].limit = LED_SEGMENT_DURATION_MS / INTERRUPT_DURATION_MS;
	timerArray[LED_2000].limit = SECOND_DURATION_MS / INTERRUPT_DURATION_MS;

	// Reset counter and flag to default value
	for(uint16_t timer = 0; timer < NUM_TIMER; timer++){
		timerArray[timer].counter = timerArray[timer].limit;
		timerArray[timer].flag = 0;
	}
}

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
	for(uint16_t timer = 0; timer < NUM_TIMER; timer++){
		timerArray[timer].counter--;
		if(timerArray[timer].counter <= 0){
			timerArray[timer].flag = TURN_ON; 	// Raise the flag
			timerArray[timer].counter = timerArray[timer].limit;	// Reset counter
		}
	}
}
